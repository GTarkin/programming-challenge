/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
    
    // Apply eclipse plugin
 	id 'eclipse'
 	
 	// Semantic versioning plugin
 	id "net.thauvin.erik.gradle.semver" version "1.0.4"
 	
 	// Apply Pitest Mutation Testing Framework plugin
 	id 'info.solidsoft.pitest' version '1.5.1'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'
    
    // For Dependency Injection
	compile group: 'com.google.inject', name: 'guice', version: '4.2.3'
    
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Mockito Mocking Framework
	testCompile group: 'org.mockito', name: 'mockito-core', version: '3.6.0'

    
    // Guice-testlib neatly integrates Mockito with Guice
	testCompile group: 'com.google.inject.extensions', name: 'guice-testlib', version: '4.2.3'
    
    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
}

// Use Java 11
sourceCompatibility = 11
targetCompatibility = 11

// Define group for PITest
group = 'de.exxecellent'

application {
    // Define the main class for the application.
    mainClassName = 'de.exxcellent.challenge.App'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}
